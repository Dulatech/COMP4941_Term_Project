@model COMP4941_Term_Project.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("FirstName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("FirstName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("FirstName", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("MiddleName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("MiddleName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("MiddleName", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("LastName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("LastName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("LastName", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("NickName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("NickName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("NickName", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("MaidenName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("MaidenName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("MaidenName", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BranchID, "BranchID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BranchID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmergencyContactID, "EmergencyContactID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("EmergencyContactID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmergencyContactID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReportRecipientID, "ReportRecipientID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ReportRecipientID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReportRecipientID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmploymentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmploymentStatus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmploymentStatus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReportsTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReportsTo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReportsTo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Groups, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Groups, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Password", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("Password", "", new { @class = "text-danger" })
        </div>
    </div>

    @{
        int i = 0;
        foreach (var controller in ActionList.ControllerActions.Keys)
        {
        <div>
            @Html.Label(controller, new { @class = "control-label" })
            @foreach (var action in ActionList.ControllerActions[controller])
            {
                <div>
                    @Html.CheckBox("checkBoxes[" + i++ + "]", false, new { @class = "control-label", @style = "margin-left: 10px" })
                    @Html.Label(action, new { @class = "control-label" })
                </div>
            }
        </div>
        }
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
